{"ast":null,"code":"var _jsxFileName = \"D:\\\\pdf co-viewer\\\\pdf-sync-client\\\\src\\\\PDFViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport io from 'socket.io-client';\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('ws://localhost:8000/ws/pdfsync/');\nconst PDFViewer = ({\n  pdfUrl\n}) => {\n  _s();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [setNumPages] = useState(null);\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to server');\n    });\n    socket.on('message', data => {\n      const {\n        message\n      } = data;\n      setPageNumber(message);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const handleNextPage = () => {\n    const nextPage = pageNumber + 1;\n    setPageNumber(nextPage);\n    socket.send(JSON.stringify({\n      message: nextPage\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Document, {\n      file: pdfUrl,\n      onLoadSuccess: ({\n        numPages\n      }) => setNumPages(numPages),\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        pageNumber: pageNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextPage,\n      children: \"Next Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(PDFViewer, \"gmXybWtn4d6WafUhSqzoQRp64zA=\");\n_c = PDFViewer;\nexport default PDFViewer;\nvar _c;\n$RefreshReg$(_c, \"PDFViewer\");","map":{"version":3,"names":["React","useState","useEffect","Document","Page","io","jsxDEV","_jsxDEV","socket","PDFViewer","pdfUrl","_s","pageNumber","setPageNumber","setNumPages","on","console","log","data","message","disconnect","handleNextPage","nextPage","send","JSON","stringify","children","file","onLoadSuccess","numPages","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/pdf co-viewer/pdf-sync-client/src/PDFViewer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Document, Page } from 'react-pdf';\r\nimport io from 'socket.io-client';\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\n\r\nconst socket = io('ws://localhost:8000/ws/pdfsync/');\r\n\r\nconst PDFViewer = ({ pdfUrl }) => {\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [setNumPages] = useState(null);\r\n\r\n  useEffect(() => {\r\n    socket.on('connect', () => {\r\n      console.log('Connected to server');\r\n    });\r\n\r\n    socket.on('message', (data) => {\r\n      const { message } = data;\r\n      setPageNumber(message);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const handleNextPage = () => {\r\n    const nextPage = pageNumber + 1;\r\n    setPageNumber(nextPage);\r\n    socket.send(JSON.stringify({ message: nextPage }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Document file={pdfUrl} onLoadSuccess={({ numPages }) => setNumPages(numPages)}>\r\n        <Page pageNumber={pageNumber} />\r\n      </Document>\r\n      <button onClick={handleNextPage}>Next Page</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PDFViewer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,IAAI,QAAQ,WAAW;AAC1C,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAO,6CAA6C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,MAAM,GAAGH,EAAE,CAAC,iCAAiC,CAAC;AAEpD,MAAMI,SAAS,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACa,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACdM,MAAM,CAACO,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC,CAAC;IAEFT,MAAM,CAACO,EAAE,CAAC,SAAS,EAAGG,IAAI,IAAK;MAC7B,MAAM;QAAEC;MAAQ,CAAC,GAAGD,IAAI;MACxBL,aAAa,CAACM,OAAO,CAAC;IACxB,CAAC,CAAC;IAEF,OAAO,MAAM;MACXX,MAAM,CAACY,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,QAAQ,GAAGV,UAAU,GAAG,CAAC;IAC/BC,aAAa,CAACS,QAAQ,CAAC;IACvBd,MAAM,CAACe,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEN,OAAO,EAAEG;IAAS,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,oBACEf,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACJ,QAAQ;MAACwB,IAAI,EAAEjB,MAAO;MAACkB,aAAa,EAAEA,CAAC;QAAEC;MAAS,CAAC,KAAKf,WAAW,CAACe,QAAQ,CAAE;MAAAH,QAAA,eAC7EnB,OAAA,CAACH,IAAI;QAACQ,UAAU,EAAEA;MAAW;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACX1B,OAAA;MAAQ2B,OAAO,EAAEb,cAAe;MAAAK,QAAA,EAAC;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACtB,EAAA,CAjCIF,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}