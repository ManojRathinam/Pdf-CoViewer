{"ast":null,"code":"var _jsxFileName = \"D:\\\\pdf co-viewer\\\\pdf-sync-client\\\\src\\\\pages\\\\Upload.js\",\n  _s = $RefreshSig$();\n// components/Upload.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n      alert('Please select a file first');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/api/upload/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        // Ensure CORS cookies are included\n        withCredentials: true\n      });\n      setUploadStatus(response.data.message);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setUploadStatus(`Upload failed: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \"application/pdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Upload, \"Sh/hChyaCqaA9N7dEugjkofgeto=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Upload","_s","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","handleFileChange","event","target","files","handleFileUpload","alert","formData","FormData","append","response","post","headers","withCredentials","data","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","onClick","_c","$RefreshReg$"],"sources":["D:/pdf co-viewer/pdf-sync-client/src/pages/Upload.js"],"sourcesContent":["// components/Upload.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Upload = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert('Please select a file first');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:8000/api/upload/', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        // Ensure CORS cookies are included\r\n        withCredentials: true,\r\n      });\r\n\r\n      setUploadStatus(response.data.message);\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      setUploadStatus(`Upload failed: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-container\">\r\n      <h2>Upload PDF</h2>\r\n      <input type=\"file\" onChange={handleFileChange} accept=\"application/pdf\" />\r\n      <button onClick={handleFileUpload}>Upload</button>\r\n      {uploadStatus && <p>{uploadStatus}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAClCJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACR,YAAY,EAAE;MACjBS,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,YAAY,CAAC;IAErC,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,mCAAmC,EAAEJ,QAAQ,EAAE;QAC/EK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACD;QACAC,eAAe,EAAE;MACnB,CAAC,CAAC;MAEFb,eAAe,CAACU,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC;IACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7ChB,eAAe,CAAC,kBAAkBgB,KAAK,CAACD,OAAO,EAAE,CAAC;IACpD;EACF,CAAC;EAED,oBACErB,OAAA;IAAKwB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BzB,OAAA;MAAAyB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB7B,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAExB,gBAAiB;MAACyB,MAAM,EAAC;IAAiB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1E7B,OAAA;MAAQiC,OAAO,EAAEtB,gBAAiB;MAAAc,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjDxB,YAAY,iBAAIL,OAAA;MAAAyB,QAAA,EAAIpB;IAAY;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAzCID,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AA2CZ,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}